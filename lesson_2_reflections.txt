What happens when you initialize a repository? Why do you need to do it?
Files required to track files and changes are created, effectively creating staging area and repository.
I need it to use the functionality that versioning system provides.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
It contains files that are prepared to go to repository.
It enables creating a set of files for commiting to repository so commits would be logically connected.
It enables us to choose which of the (modified) files will be sent to repository and which wil stay in working directory.

How can you use the staging area to make sure you have one commit per logical
change?
I can use the staging area as a buffer which will hold all files that contain changes necessary to complete a logical change for a single commit. I can then compare changes I want to commit with latest commit in repository or with workingarea to make sure the changes I want are contained in the staging area.


What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
When adding a new ferature that is not critical and might take longer to be included in the main branch or when fixing a bug that requires complex changes.
Also when multiple people make changes to the project at the same time.

How do the diagrams help you visualize the branch structure?
It is easier to see where the branches steam from and when are they merged in the master branch.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
The result is the commit that contains changes introduced in both branches, and that is why it is represented as two branches joining (merging) in one comnmit.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
Automatic merging makes merging easier as it merges changes that were introduced and saves us some time. However there are cases that are not simple or are ambiguous so merge must be done manualy by someone who can decide which change should stay in the new version.